#!/usr/bin/env python3

# to run the exe from commandine:
# D:\PythonScripts01\499hw3\simulator.exe waypoints 10

# this script's path:
# python D:\01PythonScripts\499hw3\scratch1.py

import subprocess


#  sys arg: [0] py script name;


class Simulator():
    # def __init__(self, exename = sys.argv[1], waypoints = sys.argv[2], numinst = sys.argv[3]):
    def __init__(self, numinst):
        # [0]script name; [1]exe file name; [2]waypoints; [3]instance num

        self.numinst = numinst
        # self.exename = exename
        # self.waypoints = waypoints

        # for now these ^ will be hard coded.

        self.exename = 'simulator.exe'
        self.waypoint = 'waypoint'

    def evaluate(self, w):
        x = []
        y = []

        for i in w:
            a, b = i
            x.append(a)
            y.append(b)

        # update waypoints file

        filename = self.waypoint  # file name for waypoints file
        file = open(filename, 'w')
        space = ' '

        for i in range(0, len(x)):
            coord = str(x[i]) + space + str(y[i]) + '\n'
            file.write(coord)

        file.close()

        output = str(subprocess.check_output(self.exename + ' ' + self.waypoint + ' ' + str(self.numinst)))

        output = output.split(' ')
        numpt = int(output[1])
        # print('Number of waypoints: ', numpt)

        # parse the cost

        cost = output[-1]  # the cost is the last element
        cost = cost.split('.\\')  # apparently what you have to do to split by backslash
        cost = cost[0]
        cost = float(cost)  # now cost is a floating point

        # print('The cost is: ', cost)
        return cost

if __name__ == '__main__':

    w = [(-10, -10), (0, 2), (10, 10)]   # list of tuples (waypoints)

    s = Simulator(10)

    # print('numinst is: ', s.numinst)

    print(s.evaluate(w))





